# Generated by Django 3.2.25 on 2024-07-19 04:40

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


def add_monitoring_frequency(apps, schema_editor):
    MonitoringFrequency = apps.get_model('dam_monitor', 'MonitoringFrequency')
    MonitoringFrequency.objects.get_or_create(
        name='Historical (Once off)',
    )
    MonitoringFrequency.objects.get_or_create(
        name='Quarterly',
    )
    MonitoringFrequency.objects.get_or_create(
        name='Monthly',
    )
    MonitoringFrequency.objects.get_or_create(
        name='Continuous (Per 11 days)',
    )


def reverse_func(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('user', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ModelRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MonitoringFrequency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sort_order', models.CharField(choices=[('asc', 'Ascending'), ('desc', 'Descending')], default='asc', max_length=10, null=True)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MonitoringPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=10, null=True)),
                ('geometry', django.contrib.gis.db.models.fields.PointField(null=True, srid=4326)),
                ('height', models.FloatField(blank=True, null=True)),
                ('h_stdev', models.FloatField(blank=True, null=True)),
                ('vel', models.FloatField(blank=True, null=True)),
                ('v_stdev', models.FloatField(blank=True, null=True)),
                ('coherence', models.FloatField(blank=True, null=True)),
                ('eff_area', models.FloatField(blank=True, null=True)),
                ('model_run', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dam_monitor.modelrun')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('geometry', django.contrib.gis.db.models.fields.PolygonField(srid=4326)),
                ('monitoring_type', models.CharField(choices=[('sentinel', 'Sentinel'), ('tsx', 'TerrasarX')], default='sentinel', max_length=30)),
                ('relative_orbit', models.IntegerField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dam_monitor.client')),
                ('monitoring_frequency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dam_monitor.monitoringfrequency')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MonitoringSample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('value', models.FloatField(blank=True, null=True)),
                ('monitoring_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dam_monitor.monitoringpoint')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='modelrun',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dam_monitor.site'),
        ),
        migrations.RunPython(add_monitoring_frequency, reverse_func)
    ]
